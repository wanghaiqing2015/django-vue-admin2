{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\src\\views\\vadmin\\monitor\\server\\components\\LineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\src\\views\\vadmin\\monitor\\server\\components\\LineChart.vue","mtime":1620833396842},{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBWdWVUeXBlcyBmcm9tICd2dWUtdHlwZXMnCi8vIOW8leWFpeWfuuacrOaooeadvyzmjInpnIDliqDovb0KaW1wb3J0IGVjaGFydHMgZnJvbSAnZWNoYXJ0cycKaW1wb3J0IG1vbWVudCBmcm9tICdtb21lbnQnCmltcG9ydCB7IGdldE1vbml0b3JMb2dzIH0gZnJvbSAnQC9hcGkvdmFkbWluL21vbml0b3Ivc2VydmVyJwoKY29uc3QgTU9OVEggPSBtb21lbnQoKS5tb250aCgpCmNvbnN0IFlFQVIgPSBtb21lbnQoKS55ZWFyKCkKY29uc3QgVE9EQVkgPSBtb21lbnQoKS5mb3JtYXQoJ1lZWVktTU0tREQnKQpjb25zdCBZRVNURVJEQVkgPSBtb21lbnQoKS5zdWJ0cmFjdCgxLCAnZGF5cycpLmZvcm1hdCgnWVlZWS1NTS1ERCcpCmNvbnN0IExBU1RfU0VWRU5fREFZUyA9IG1vbWVudCgpLnN1YnRyYWN0KDcsICdkYXlzJykuZm9ybWF0KCdZWVlZLU1NLUREJykKY29uc3QgTEFTVF9USElSVFlfREFZUyA9IG1vbWVudCgpLnN1YnRyYWN0KDMwLCAnZGF5cycpLmZvcm1hdCgnWVlZWS1NTS1ERCcpCgovLyDml7bpl7TmrrXnrZvpgInphY3nva4KY29uc3QgVElNRV9MSU1JVF9TRVRUSU5HID0gewogICd5ZXN0ZXJkYXknOiB7CiAgICBrZXk6ICd5ZXN0ZXJkYXknLAogICAgbmFtZTogJ+aYqOWkqScsCiAgICB0aW1lUmFuZ2U6IFsKICAgICAgYCR7WUVTVEVSREFZfSAwMDowMDowMGAsCiAgICAgIGAke1lFU1RFUkRBWX0gMjM6NTk6NTlgCiAgICBdCiAgfSwKICAndG9kYXknOiB7CiAgICBrZXk6ICd0b2RheScsCiAgICBuYW1lOiAn5LuK5aSpJywKICAgIHRpbWVSYW5nZTogWwogICAgICBgJHtUT0RBWX0gMDA6MDA6MDBgLAogICAgICBgJHtUT0RBWX0gMjM6NTk6NTlgCiAgICBdCiAgfSwKICAnbGF0ZXN0V2Vlayc6IHsKICAgIGtleTogJ2xhdGVzdFdlZWsnLAogICAgbmFtZTogJ+acgOi/kTflpKknLAogICAgdGltZVJhbmdlOiBbCiAgICAgIGAke0xBU1RfU0VWRU5fREFZU30gMDA6MDA6MDBgLAogICAgICBgJHtUT0RBWX0gMjM6NTk6NTlgCiAgICBdCiAgfSwKICAnbGF0ZXN0TW9udGgnOiB7CiAgICBrZXk6ICdsYXRlc3RNb250aCcsCiAgICBuYW1lOiAn5pyA6L+RMzDlpKknLAogICAgdGltZVJhbmdlOiBbCiAgICAgIGAke0xBU1RfVEhJUlRZX0RBWVN9IDAwOjAwOjAwYCwKICAgICAgYCR7VE9EQVl9IDIzOjU5OjU5YAogICAgXQogIH0KfQovLyDpu5jorqTmmL7npLrml7bpl7QKY29uc3QgREVGQVVMVF9USU1FID0gJ+S7iuWkqScKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnTGluZUNoYXJ0JywKICBwcm9wczogewogICAgc2VydmVySW5mbzogVnVlVHlwZXMub2JqZWN0LmlzUmVxdWlyZWQsCiAgICBsaW5lQ2hhcnRLZXk6IFZ1ZVR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLAogICAgY2hhcnRUaXRsZTogVnVlVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsCiAgICBjaGFydERhdGE6IFZ1ZVR5cGVzLmFycmF5LmlzUmVxdWlyZWQsCiAgICBjaGFydFRpbWU6IFZ1ZVR5cGVzLmFycmF5LmlzUmVxdWlyZWQsCiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgVElNRV9MSU1JVF9TRVRUSU5HLAogICAgICB0aW1lTGltaXQ6IERFRkFVTFRfVElNRSwKICAgICAgbGluZUNoYXJ0SWQ6IHRoaXMubGluZUNoYXJ0S2V5ICsgJ0NoYXJ0JywKICAgICAgbGluZUNoYXJ0RGF0YTogdGhpcy5jaGFydERhdGEsCiAgICAgIGxpbmVDaGFydFRpbWU6IHRoaXMuY2hhcnRUaW1lCiAgICB9CiAgfSwKCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuZHJhd0JhcigpCiAgfSwKICBjb21wdXRlZDogewogICAgdGltZUxpbWl0TmFtZXMoKSB7CiAgICAgIHJldHVybiBPYmplY3Qua2V5cyhUSU1FX0xJTUlUX1NFVFRJTkcpLm1hcChpdGVtID0+IHsKICAgICAgICByZXR1cm4gVElNRV9MSU1JVF9TRVRUSU5HW2l0ZW1dLm5hbWUKICAgICAgfSkKICAgIH0sCiAgICBjdXJyZW50RGF0ZUluZGV4KCkgewogICAgICByZXR1cm4gdGhpcy50aW1lTGltaXROYW1lcy5pbmRleE9mKHRoaXMudGltZUxpbWl0KQogICAgfSwKICAgIGN1cnJlbnRUaW1lTGltaXRTZXR0aW5nKCkgewogICAgICByZXR1cm4gVElNRV9MSU1JVF9TRVRUSU5HW09iamVjdC5rZXlzKFRJTUVfTElNSVRfU0VUVElORylbdGhpcy5jdXJyZW50RGF0ZUluZGV4XV0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGRyYXdCYXIoKSB7CiAgICAgIC8vIOWfuuS6jmRvbe+8jOWIneWni+WMlmVjaGFydHPlrp7kvosKICAgICAgbGV0IGJhckdyYXBoID0gZWNoYXJ0cy5pbml0KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHRoaXMubGluZUNoYXJ0SWQpKQogICAgICAvLyDnu5jliLblm77ooagKICAgICAgYmFyR3JhcGguc2V0T3B0aW9uKHsKICAgICAgICB0b29sdGlwIDogewogICAgICAgICAgdHJpZ2dlcjogJ2F4aXMnLAogICAgICAgICAgYXhpc1BvaW50ZXI6IHsKICAgICAgICAgICAgdHlwZTogJ2Nyb3NzJywKICAgICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjNmE3OTg1JywKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBsZWZ0OiAnY2VudGVyJywKICAgICAgICAgIGRhdGE6IFtdLAogICAgICAgICAgYm90dG9tOiAwCiAgICAgICAgfSwKICAgICAgICB4QXhpczogewogICAgICAgICAgdHlwZTogJ2NhdGVnb3J5JywKICAgICAgICAgIG5hbWU6ICd4JywKICAgICAgICAgIHNwbGl0TGluZTogeyBzaG93OiBmYWxzZSB9LAogICAgICAgICAgZGF0YTp0aGlzLmxpbmVDaGFydFRpbWUsCiAgICAgICAgICBvZmZzZXQ6MjAKICAgICAgICB9LAogICAgICAgIGdyaWQ6IHsKICAgICAgICAgIGxlZnQ6ICcxJScsCiAgICAgICAgICByaWdodDogJzIlJywKICAgICAgICAgIGJvdHRvbTogJzglJywKICAgICAgICAgIGNvbnRhaW5MYWJlbDogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgeUF4aXM6IHsKICAgICAgICAgIHR5cGU6ICd2YWx1ZScsCiAgICAgICAgICBuYW1lOiAn5L2/55So546HJywKICAgICAgICAgIGF4aXNMYWJlbDogewogICAgICAgICAgICBzaG93OiB0cnVlLAogICAgICAgICAgICBpbnRlcnZhbDogJ2F1dG8nLAogICAgICAgICAgICBmb3JtYXR0ZXI6ICd7dmFsdWV9JScKICAgICAgICAgIH0sCiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFsKICAgICAgICAgIHsKICAgICAgICAgICAgbmFtZTogJ+S9v+eUqOeOhycsCiAgICAgICAgICAgIHR5cGU6ICdsaW5lJywKICAgICAgICAgICAgZGF0YTogdGhpcy5saW5lQ2hhcnREYXRhLAogICAgICAgICAgfQogICAgICAgIF0sCiAgICAgIH0pCiAgICB9LAogICAgY2hhbmdlVGltZUxpbWl0KHZhbHVlKSB7CiAgICAgIHRoaXMudGltZUxpbWl0ID0gdmFsdWUKICAgICAgdGhpcy5nZXRDdXJyZW50U2VydmVyTW9uaXRvckxvZ3MoKQogICAgfSwKICAgIGdldEN1cnJlbnRTZXJ2ZXJNb25pdG9yTG9ncygpIHsKICAgICAgZ2V0TW9uaXRvckxvZ3ModGhpcy5zZXJ2ZXJJbmZvLmlkLCB7YXM6IEpTT04uc3RyaW5naWZ5KHtjcmVhdGVfZGF0ZXRpbWVfX3JhbmdlOiB0aGlzLmN1cnJlbnRUaW1lTGltaXRTZXR0aW5nLnRpbWVSYW5nZX0pfSkudGhlbihyZXN1bHRzID0+IHsKICAgICAgICB0aGlzLmxpbmVDaGFydERhdGEgPSByZXN1bHRzLmRhdGFbdGhpcy5saW5lQ2hhcnRLZXldCiAgICAgICAgdGhpcy5saW5lQ2hhcnRUaW1lID0gcmVzdWx0cy5kYXRhWyJkYXRldGltZSJdCiAgICAgICAgdGhpcy5kcmF3QmFyKCkKICAgICAgfSkuY2F0Y2goZXJyb3IgPT4gewogICAgICAgIHRoaXMuJG1lc3NhZ2Uud2FybmluZyhlcnJvci5tc2cgfHwgYOiOt+WPliR7dGhpcy5jaGFydFRpdGxlfeaVsOaNruWksei0pe+8gWApCiAgICAgIH0pCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["LineChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LineChart.vue","sourceRoot":"src/views/vadmin/monitor/server/components","sourcesContent":["<template>\n  <div>\n    <div class=\"line-chart-title\">\n      <div class=\"line-chart-name\">{{ chartTitle }}</div>\n      <div class=\"line-chart-time-radio\">\n        <el-radio-group v-model=\"timeLimit\" @change=\"changeTimeLimit\">\n          <el-radio-button\n            v-for=\"item in Object.keys(TIME_LIMIT_SETTING)\"\n            :label=\"TIME_LIMIT_SETTING[item].name\"\n            :key=\"TIME_LIMIT_SETTING[item].key\"\n          ></el-radio-button>\n        </el-radio-group>\n      </div>\n    </div>\n    <div :id=\"lineChartId\" class=\"line-chart-body\"></div>\n  </div>\n</template>\n\n<script>\nimport VueTypes from 'vue-types'\n// 引入基本模板,按需加载\nimport echarts from 'echarts'\nimport moment from 'moment'\nimport { getMonitorLogs } from '@/api/vadmin/monitor/server'\n\nconst MONTH = moment().month()\nconst YEAR = moment().year()\nconst TODAY = moment().format('YYYY-MM-DD')\nconst YESTERDAY = moment().subtract(1, 'days').format('YYYY-MM-DD')\nconst LAST_SEVEN_DAYS = moment().subtract(7, 'days').format('YYYY-MM-DD')\nconst LAST_THIRTY_DAYS = moment().subtract(30, 'days').format('YYYY-MM-DD')\n\n// 时间段筛选配置\nconst TIME_LIMIT_SETTING = {\n  'yesterday': {\n    key: 'yesterday',\n    name: '昨天',\n    timeRange: [\n      `${YESTERDAY} 00:00:00`,\n      `${YESTERDAY} 23:59:59`\n    ]\n  },\n  'today': {\n    key: 'today',\n    name: '今天',\n    timeRange: [\n      `${TODAY} 00:00:00`,\n      `${TODAY} 23:59:59`\n    ]\n  },\n  'latestWeek': {\n    key: 'latestWeek',\n    name: '最近7天',\n    timeRange: [\n      `${LAST_SEVEN_DAYS} 00:00:00`,\n      `${TODAY} 23:59:59`\n    ]\n  },\n  'latestMonth': {\n    key: 'latestMonth',\n    name: '最近30天',\n    timeRange: [\n      `${LAST_THIRTY_DAYS} 00:00:00`,\n      `${TODAY} 23:59:59`\n    ]\n  }\n}\n// 默认显示时间\nconst DEFAULT_TIME = '今天'\n\nexport default {\n  name: 'LineChart',\n  props: {\n    serverInfo: VueTypes.object.isRequired,\n    lineChartKey: VueTypes.string.isRequired,\n    chartTitle: VueTypes.string.isRequired,\n    chartData: VueTypes.array.isRequired,\n    chartTime: VueTypes.array.isRequired,\n  },\n  data() {\n    return {\n      TIME_LIMIT_SETTING,\n      timeLimit: DEFAULT_TIME,\n      lineChartId: this.lineChartKey + 'Chart',\n      lineChartData: this.chartData,\n      lineChartTime: this.chartTime\n    }\n  },\n\n  mounted() {\n    this.drawBar()\n  },\n  computed: {\n    timeLimitNames() {\n      return Object.keys(TIME_LIMIT_SETTING).map(item => {\n        return TIME_LIMIT_SETTING[item].name\n      })\n    },\n    currentDateIndex() {\n      return this.timeLimitNames.indexOf(this.timeLimit)\n    },\n    currentTimeLimitSetting() {\n      return TIME_LIMIT_SETTING[Object.keys(TIME_LIMIT_SETTING)[this.currentDateIndex]]\n    }\n  },\n  methods: {\n    drawBar() {\n      // 基于dom，初始化echarts实例\n      let barGraph = echarts.init(document.getElementById(this.lineChartId))\n      // 绘制图表\n      barGraph.setOption({\n        tooltip : {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'cross',\n            label: {\n              backgroundColor: '#6a7985',\n            }\n          }\n        },\n        legend: {\n          left: 'center',\n          data: [],\n          bottom: 0\n        },\n        xAxis: {\n          type: 'category',\n          name: 'x',\n          splitLine: { show: false },\n          data:this.lineChartTime,\n          offset:20\n        },\n        grid: {\n          left: '1%',\n          right: '2%',\n          bottom: '8%',\n          containLabel: true\n        },\n        yAxis: {\n          type: 'value',\n          name: '使用率',\n          axisLabel: {\n            show: true,\n            interval: 'auto',\n            formatter: '{value}%'\n          },\n        },\n        series: [\n          {\n            name: '使用率',\n            type: 'line',\n            data: this.lineChartData,\n          }\n        ],\n      })\n    },\n    changeTimeLimit(value) {\n      this.timeLimit = value\n      this.getCurrentServerMonitorLogs()\n    },\n    getCurrentServerMonitorLogs() {\n      getMonitorLogs(this.serverInfo.id, {as: JSON.stringify({create_datetime__range: this.currentTimeLimitSetting.timeRange})}).then(results => {\n        this.lineChartData = results.data[this.lineChartKey]\n        this.lineChartTime = results.data[\"datetime\"]\n        this.drawBar()\n      }).catch(error => {\n        this.$message.warning(error.msg || `获取${this.chartTitle}数据失败！`)\n      })\n    }\n  }\n}\n</script>\n\n<style scoped>\n.line-chart-name {\n  font-weight: bolder;\n  width: 20%;\n  min-width: 30px;\n  text-align: left;\n  display: inline-block;\n}\n\n.line-chart-time-radio {\n  font-weight: bolder;\n  width: 80%;\n  min-width: 200px;\n  text-align: right;\n  display: inline-block;\n}\n\n.line-chart-body {\n  min-height: 300px;\n  min-width: 300px;\n}\n</style>\n"]}]}