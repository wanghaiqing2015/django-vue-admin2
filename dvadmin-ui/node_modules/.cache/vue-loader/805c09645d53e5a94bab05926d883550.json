{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\src\\views\\vadmin\\monitor\\celery\\periodic-task\\edit-form-periodic-task.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\src\\views\\vadmin\\monitor\\celery\\periodic-task\\edit-form-periodic-task.vue","mtime":1620833396835},{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZWwtcGlja2VyLXBhbmVsIHsKICAgIGNvbG9yOiAjNjA2MjY2OwogICAgYm9yZGVyOiAxcHggc29saWQgI0U0RTdFRDsKICAgIC13ZWJraXQtYm94LXNoYWRvdzogMCAycHggMTJweCAwIHJnYmEoMCwwLDAsLjEpOwogICAgYm94LXNoYWRvdzogMCAycHggMTJweCAwIHJnYmEoMCwwLDAsLjEpOwogICAgYmFja2dyb3VuZDogI0ZGRjsKICAgIGJvcmRlci1yYWRpdXM6IDRweDsKICAgIGxpbmUtaGVpZ2h0OiA1cHghaW1wb3J0YW50OwogICAgbWFyZ2luOiA1cHggMDsKfQouZWwtcGlja2VyLXBhbmVsX19jb250ZW50IHsKICAgICBtYXJnaW46IDE1cHg7Cn0K"},{"version":3,"sources":["edit-form-periodic-task.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"edit-form-periodic-task.vue","sourceRoot":"src/views/vadmin/monitor/celery/periodic-task","sourcesContent":["<!--\n@author: xuchi\n@description: 接口编辑组件\n-->\n<template>\n  <small-dialog\n    ref=\"dialog\"\n    v-model=\"dialogVisible\"\n    :dialog-title=\"dialogTitle\"\n    :width=\"width\"\n    :close-on-click-modal=\"false\"\n    :append-to-body=\"true\"\n    icon=\"svg:icon-interface\"\n    @confirm=\"handleSubmit\"\n    @closed=\"dialogClose\"\n    @opened=\"dialogOpen\">\n    <el-form v-loading=\"loading\" ref=\"form\" :model=\"form\" :size=\"$ELEMENT.size\" label-width=\"120px\">\n      <el-form-item :rules=\"[{ required: true, message: '任务不能为空'}]\" label=\"celery任务:\" prop=\"task\">\n        <el-autocomplete\n          v-model=\"form.task\"\n          :fetch-suggestions=\"querySearch\"\n          class=\"inline-input\"\n          filterable\n          placeholder=\"celery任务\"\n          style=\"width: 400px;\"\n          @select=\"handleSelect\"\n        >\n          <template slot-scope=\"{ item }\">\n            <div class=\"name\">{{ item }}</div>\n          </template>\n        </el-autocomplete>\n      </el-form-item>\n      <el-form-item :rules=\"[{ required: true, message: '名称不能为空'}]\" prop=\"name\" label=\"名称:\">\n        <el-input v-model=\"form.name\" placeholder=\"例如: XXX同步任务\" style=\"width: 400px;\"/>\n      </el-form-item>\n      <el-form-item prop=\"interval\" label=\"任务频率:\">\n        <el-select v-model=\"form.interval\" placeholder=\"请选择任务频率\" style=\"width: 400px;\" @change=\"form.crontab = ''\">\n          <el-option\n            v-for=\"(item,index) in Interval\"\n            :key=\"index\"\n            :label=\"getIntervalData(item)\"\n            :value=\"item.id\"/>\n        </el-select>\n      </el-form-item>\n      <el-form-item prop=\"crontab\" label=\"任务定时:\">\n        <el-select v-model=\"form.crontab\" placeholder=\"请选择任务定时\" style=\"width: 400px;\" @change=\"form.interval = ''\">\n          <el-option\n            v-for=\"(item,index) in Crontab\"\n            :key=\"index\"\n            :label=\"getCrontabData(item)\"\n            :value=\"item.id\"/>\n        </el-select>\n      </el-form-item>\n      <el-form-item prop=\"enabled\" label=\"是否开启:\">\n        <template>\n          <el-radio-group v-model=\"form.enabled\">\n            <el-radio :label=\"true\">是</el-radio>\n            <el-radio :label=\"false\">否</el-radio>\n          </el-radio-group>\n        </template>\n      </el-form-item>\n    </el-form>\n  </small-dialog>\n</template>\n<script>\n  import * as SyncDataApi from \"@/api/vadmin/monitor/celery\";\n  export default {\n    props: {\n      entity: { type: Object, default: null },\n      value: { type: Boolean, default: null },\n      create: { type: Boolean, default: false },\n      width: { type: String, default: '50%' },\n      tags: { type: Array, default: () => [] }\n    },\n    data() {\n        return {\n            loading: false,\n            dialogVisible: false,\n            form: {\n                task: '',\n                name: '',\n                interval: '',\n                crontab: '',\n                date: '',\n                enabled: false\n            },\n            tasks_as_choices: [],\n            Crontab: [],\n            Interval: []\n        };\n    },\n    computed: {\n      dialogTitle() {\n        return this.create ? '新增任务' : '编辑任务';\n      }\n    },\n    watch: {\n      value(val) {\n        this.dialogVisible = val;\n      },\n      dialogVisible(val) {\n        this.$emit('input', val);\n        if (!this.Crontab[0]) {\n          this.Crontab = this.$store.state.Crontab;\n          console.log(1, this.Crontab);\n        }\n        if (!this.Interval[0]) {\n          this.Interval = this.$store.state.Interval;\n          console.log(2, this.Interval);\n        }\n      }\n    },\n    created() {\n      // 获取所有 tasks 名称\n      SyncDataApi.TasksAsChoices().then((response) => {\n        this.tasks_as_choices = response.data || [];\n      });\n    },\n    methods: {\n      querySearch(queryString, cb) {\n        var restaurants = this.tasks_as_choices;\n        var results = queryString ? restaurants.filter(this.createFilter(queryString)) : restaurants;\n        // 调用 callback 返回建议列表的数据\n        cb(results);\n      }, createFilter(queryString) {\n        return (restaurant) => {\n          return (restaurant.toLowerCase().indexOf(queryString.toLowerCase()) !== -1);\n        };\n      },\n      handleSelect(item) {\n        this.form.task = item;\n      },\n      dialogOpen() {\n        // 为True意味着是通过遍及方式打开对话框\n        if (!this.create) {\n          this.form = { ...this.entity };\n        }\n      },\n      handleSubmit() {\n        this.$refs['form'].validate((valid) => {\n          if (valid) {\n            this.loading = true;\n            const data = { ...this.form };\n            if (this.create) {\n              delete data['instanceId'];\n              SyncDataApi.createPeriodicTask(data).then(response => {\n                this.loading = false;\n                this.$emit('success', response.data);\n                this.dialogClose();\n                this.msgSuccess('新增成功!');\n              }).catch(() => {\n                this.loading = false;\n              });\n            } else {\n              SyncDataApi.updatePeriodicTask(data).then(response => {\n                this.$emit('success', response.data);\n                this.loading = false;\n                this.msgSuccess('更新成功!');\n                this.dialogClose();\n              }).catch(() => {\n                this.loading = false;\n              });\n            }\n          } else {\n            return false;\n          }\n        });\n      },\n      dialogClose() {\n        this.$refs['form'].resetFields();\n        this.dialogVisible = false;\n      }\n    }\n  };\n</script>\n<style>\n    .el-picker-panel {\n        color: #606266;\n        border: 1px solid #E4E7ED;\n        -webkit-box-shadow: 0 2px 12px 0 rgba(0,0,0,.1);\n        box-shadow: 0 2px 12px 0 rgba(0,0,0,.1);\n        background: #FFF;\n        border-radius: 4px;\n        line-height: 5px!important;\n        margin: 5px 0;\n    }\n    .el-picker-panel__content {\n         margin: 15px;\n    }\n</style>\n\n"]}]}