{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\src\\views\\vadmin\\permission\\user\\index.vue?vue&type=template&id=2f342df2&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\src\\views\\vadmin\\permission\\user\\index.vue","mtime":1620833396850},{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}