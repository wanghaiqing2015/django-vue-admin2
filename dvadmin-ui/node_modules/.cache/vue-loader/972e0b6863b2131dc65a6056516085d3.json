{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\src\\views\\vadmin\\monitor\\server\\components\\InstrumentBoard.vue?vue&type=style&index=0&id=ade540be&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\src\\views\\vadmin\\monitor\\server\\components\\InstrumentBoard.vue","mtime":1620833396842},{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\django-vue-admin\\dvadmin-ui\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5pbnN0cnVtZW50LWJvYXJkLXRpdGxlIHsKICBmb250LXdlaWdodDogYm9sZGVyOwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQoKLmluc3RydW1lbnQtYm9hcmQtYm9keSB7CiAgbWluLWhlaWdodDogMjAwcHg7CiAgbWluLXdpZHRoOiAyMDBweDsKfQoKLmluc3RydW1lbnQtYm9hcmQtc3VidGl0bGUgewogIHRleHQtYWxpZ246IGNlbnRlcjsKfQo="},{"version":3,"sources":["InstrumentBoard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0MA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"InstrumentBoard.vue","sourceRoot":"src/views/vadmin/monitor/server/components","sourcesContent":["<template>\n  <div class=\"instrument-board\">\n    <div v-if=\"showTopTitle && haveMultipleData\" class=\"instrument-board-title\">\n      <el-select :value=\"topTitle\"\n                 @change=\"chooseDisplayInstrumentBoardData\"\n      >\n        <el-option\n          v-for=\"(item,index) in instrumentBoardData\"\n          :key=\"index\"\n          :label=\"item.name || item['dir_name']\"\n          :value=\"index\"\n        >\n        </el-option>\n      </el-select>\n\n    </div>\n    <div v-else-if=\"showTopTitle\" class=\"instrument-board-title\">\n      {{ topTitle }}\n    </div>\n\n    <div :id=\"ringGraphId\" class=\"instrument-board-body\"></div>\n    <div v-if=\"showSubTitle\"\n         class=\"instrument-board-subtitle\"\n         :title=\"subTitle.title\"\n    >{{ subTitle.content }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport VueTypes from 'vue-types'\n// 引入基本模板,按需加载\nconst echarts = require('echarts/lib/echarts')\nrequire('echarts/lib/chart/gauge')\n\n// 仪表盘颜色范围\nconst NORMAL_COLOR = {\n  color: '#28BCFE',\n  itemColor: ['#25bfff', '#5284de', '#2a95f9']\n}\nconst WARNING_COLOR = {\n  color: '#e6a23c',\n  itemColor: ['#e6a23c', '#cc8b1d', '#ffaf18']\n}\nconst DANGER_COLOR = {\n  color: '#F56C6C',\n  itemColor: ['#fd666d', '#cf1717', '#b31212']\n}\n\nexport default {\n  name: 'InstrumentBoard',\n  props: {\n    // 组件key\n    ringGraphKey: VueTypes.string.isRequired,\n    // 上标题\n    showTopTitle: VueTypes.bool.def(false),\n    // 下标题\n    showSubTitle: VueTypes.bool.def(false),\n    // top title 配置映射\n    topTitleKeyToNameMapping: VueTypes.object.def({\n      cpu: 'CPU使用率',\n      memory: '内存使用率'\n    }),\n    instrumentBoardData: VueTypes.any.isRequired\n  },\n  data() {\n    return {\n      // 当前显示的数据\n      currentInstrumentBoardData: {}\n    }\n  },\n  computed: {\n    // 仪表盘是否存在多个数据\n    haveMultipleData() {\n      return this.instrumentBoardData instanceof Array && this.instrumentBoardData.length > 0\n    },\n    // 使用率\n    ringRate() {\n      let ringRate = this.currentInstrumentBoardData.rate\n      ringRate = ringRate < 1 ? ringRate * 100 : ringRate\n      return parseFloat(ringRate.toFixed(4))\n    },\n    // 仪表盘id\n    ringGraphId() {\n      return `${this.ringGraphKey}UsingRate`\n    },\n    // 上方标题\n    topTitle() {\n      return this.currentInstrumentBoardData['dir_name'] || this.topTitleKeyToNameMapping[this.ringGraphKey] || this.ringGraphKey\n    },\n    // 下方标题\n    subTitle() {\n      let used = this.currentInstrumentBoardData['used'] ? this.currentInstrumentBoardData['used'] + '/' : ''\n      let total = this.currentInstrumentBoardData['total'] ? this.currentInstrumentBoardData['total'] : ''\n      let unit = this.currentInstrumentBoardData['unit'] ? ` (${this.currentInstrumentBoardData['unit']})` : ''\n      let content = `${used}${total}${unit} `\n      let title = (this.currentInstrumentBoardData['used'] ? '已用/' : '') + '总量(单位)'\n      return { content, title }\n    },\n    // 使用率样式配置\n    usingRateStyle() {\n      return {\n        fontSize: 18,\n        ...this.getCircleColor(this.ringRate)\n      }\n    }\n  },\n  mounted() {\n    if (this.haveMultipleData) {\n      this.currentInstrumentBoardData = this.instrumentBoardData[0]\n    } else {\n      this.currentInstrumentBoardData = this.instrumentBoardData\n    }\n    this.drawBar()\n  },\n  methods: {\n    drawBar() {\n      let currentRate = [this.ringRate]\n      // 基于dom，初始化echarts实例\n      let RingGraph = echarts.init(document.getElementById(this.ringGraphId))\n\n      let option = {\n        title: {\n          text: currentRate + '%',\n          textStyle: this.usingRateStyle,\n          itemGap: 10,\n          left: 'center',\n          top: '45%'\n        },\n        angleAxis: {\n          max: 100,\n          clockwise: true, // 逆时针\n          // 隐藏刻度线\n          show: false\n        },\n        radiusAxis: {\n          type: 'category',\n          show: true,\n          axisLabel: {\n            show: false\n          },\n          axisLine: {\n            show: false\n          },\n          axisTick: {\n            show: false\n          }\n        },\n        polar: {\n          center: ['50%', '50%'], // 坐标中心位置\n          radius: '100%' //图形大小\n        },\n        series: [{\n          type: 'bar',\n          data: currentRate,\n          showBackground: true,\n          backgroundStyle: {\n            color: '#BDEBFF' // 底圈颜色\n          },\n          coordinateSystem: 'polar',\n          roundCap: true,\n          barWidth: 15,\n          itemStyle: {\n            normal: {\n              opacity: 1,\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [{\n                offset: 0,\n                color: this.usingRateStyle.itemColor[0] || '#25BFFF'\n              }, {\n                offset: 1,\n                color: this.usingRateStyle.itemColor[1] || '#5284DE'\n              }]),\n              shadowBlur: 1,\n              shadowColor: this.usingRateStyle.itemColor[2] || '#2A95F9'\n            }\n          }\n        }]\n      }\n      // 绘制图表\n      RingGraph.setOption(option)\n    },\n    // 仪表盘样式-颜色\n    getCircleColor(usingRate) {\n      if (usingRate < 60) {\n        return NORMAL_COLOR\n      } else if (usingRate > 60 && usingRate < 80) {\n        return WARNING_COLOR\n      } else if (usingRate > 80) {\n        return DANGER_COLOR\n      }\n      return NORMAL_COLOR\n    },\n    chooseDisplayInstrumentBoardData(index) {\n      this.currentInstrumentBoardData = this.instrumentBoardData[index]\n      this.drawBar()\n    }\n  }\n\n}\n</script>\n\n<style scoped>\n.instrument-board-title {\n  font-weight: bolder;\n  text-align: center;\n}\n\n.instrument-board-body {\n  min-height: 200px;\n  min-width: 200px;\n}\n\n.instrument-board-subtitle {\n  text-align: center;\n}\n</style>\n"]}]}